type Circuit {
  circuitId: Int!
  circuitRef: String!
  name: String!
  location: String
  country: String
  lat: Float
  lng: Float
  alt: Float
  url: String!
}

input NewCircuitInput {
  circuitId: Int!
  circuitRef: String!
  name: String!
  location: String
  country: String
  lat: Float
  lng: Float
  alt: Float
  url: String!
}

input UpdateCircuitInput {
  circuitRef: String
  name: String
  location: String
  country: String
  lat: Float
  lng: Float
  alt: Float
  url: String
}

input FilterCircuitInput {
  circuitId: Int
  circuitRef: String
  name: String
  location: String
  country: String
  lat: Float
  lng: Float
  alt: Float
  url: String
}

extend type Query {
  circuits(skip: Int, limit: Int, filter: FilterCircuitInput): [Circuit]!
  circuit(circuitId: ID!): Circuit!
}

extend type Mutation {
  newCircuit(input: NewCircuitInput!): Circuit!
  updateCircuit(circuitId: ID!, input: UpdateCircuitInput!): Circuit!
  removeCircuit(circuitId: ID!): Circuit!
}
