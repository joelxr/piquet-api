type Constructor {
  constructorId: Int!
  constructorRef: String!
  name: String!
  nationality: String
  url: String!
}

input NewConstructorInput {
  constructorId: Int!
  constructorRef: String!
  name: String!
  nationality: String
  url: String!
}

input UpdateConstructorInput {
  constructorRef: String
  name: String
  nationality: String
  url: String
}

input FilterConstructorInput {
  constructorId: Int
  constructorRef: String
  name: String
  nationality: String
  url: String
}

extend type Query {
  constructors(
    skip: Int
    limit: Int
    filter: FilterConstructorInput
  ): [Constructor]!
  constructor(constructorId: ID!): Constructor!
}

extend type Mutation {
  newConstructor(input: NewConstructorInput!): Constructor!
  updateConstructor(
    constructorId: ID!
    input: UpdateConstructorInput!
  ): Constructor!
  removeConstructor(constructorId: ID!): Constructor!
}
